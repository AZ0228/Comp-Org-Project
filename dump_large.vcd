$date
	Fri Dec  8 17:16:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_ram_large $end
$var wire 32 ! data [31:0] $end
$var parameter 32 " ADDR_WIDTH $end
$var parameter 32 # DATA_WIDTH $end
$var reg 30 $ addr [29:0] $end
$var reg 1 % clk $end
$var reg 1 & cs_input $end
$var reg 1 ' oe $end
$var reg 32 ( testbench_data [31:0] $end
$var reg 1 ) we $end
$var integer 32 * i [31:0] $end
$scope module u0 $end
$var wire 30 + addr [29:0] $end
$var wire 1 % clk $end
$var wire 1 & cs_input $end
$var wire 32 , data [31:0] $end
$var wire 1 ' oe $end
$var wire 1 ) we $end
$var wire 2 - cs [1:0] $end
$var parameter 32 . ADDR_WIDTH $end
$var parameter 32 / DATA_WIDTH $end
$var parameter 32 0 DATA_WIDTH_SHIFT $end
$scope module dec $end
$var wire 1 1 in $end
$var wire 2 2 out [1:0] $end
$var parameter 32 3 DECODE_WIDTH $end
$var parameter 32 4 ENCODE_WIDTH $end
$var parameter 32 5 latency $end
$upscope $end
$scope module u00 $end
$var wire 28 6 addr [27:0] $end
$var wire 1 % clk $end
$var wire 1 7 cs $end
$var wire 16 8 data [15:0] $end
$var wire 1 ' oe $end
$var wire 1 ) we $end
$var parameter 32 9 ADDR_WIDTH $end
$var parameter 32 : DATA_WIDTH $end
$var parameter 60 ; LENGTH $end
$var reg 16 < tmp_data [15:0] $end
$upscope $end
$scope module u01 $end
$var wire 28 = addr [27:0] $end
$var wire 1 % clk $end
$var wire 1 > cs $end
$var wire 16 ? data [15:0] $end
$var wire 1 ' oe $end
$var wire 1 ) we $end
$var parameter 32 @ ADDR_WIDTH $end
$var parameter 32 A DATA_WIDTH $end
$var parameter 60 B LENGTH $end
$var reg 16 C tmp_data [15:0] $end
$upscope $end
$scope module u10 $end
$var wire 28 D addr [27:0] $end
$var wire 1 % clk $end
$var wire 1 E cs $end
$var wire 16 F data [15:0] $end
$var wire 1 ' oe $end
$var wire 1 ) we $end
$var parameter 32 G ADDR_WIDTH $end
$var parameter 32 H DATA_WIDTH $end
$var parameter 60 I LENGTH $end
$var reg 16 J tmp_data [15:0] $end
$upscope $end
$scope module u11 $end
$var wire 28 K addr [27:0] $end
$var wire 1 % clk $end
$var wire 1 L cs $end
$var wire 16 M data [15:0] $end
$var wire 1 ' oe $end
$var wire 1 ) we $end
$var parameter 32 N ADDR_WIDTH $end
$var parameter 32 O DATA_WIDTH $end
$var parameter 60 P LENGTH $end
$var reg 16 Q tmp_data [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000000000000000000000000000 P
b10000 O
b11100 N
b10000000000000000000000000000 I
b10000 H
b11100 G
b10000000000000000000000000000 B
b10000 A
b11100 @
b10000000000000000000000000000 ;
b10000 :
b11100 9
b1 5
b1 4
b10 3
b1 0
b100000 /
b11110 .
b100000 #
b11110 "
$end
#0
$dumpvars
bx Q
bz M
xL
b0 K
bx J
bz F
xE
b0 D
bx C
bz ?
x>
b0 =
bx <
bz 8
x7
b0 6
bx 2
01
bx -
bz ,
b0 +
bx *
0)
b0 (
0'
0&
0%
b0 $
bz !
$end
#1000
0L
0E
1>
17
b1 -
b1 2
#20000
1%
#40000
0%
#60000
b0 *
1%
#80000
0%
#100000
b11010100100100 8
b1001000010101 ?
b11010100100100 F
b1001000010101 M
b10010000101010011010100100100 !
b10010000101010011010100100100 ,
b10010000101010011010100100100 (
1&
1)
b1 *
1%
#120000
0%
#140000
b101111010000001 8
b1100000010001001 ?
b101111010000001 F
b1100000010001001 M
b11000000100010010101111010000001 !
b11000000100010010101111010000001 ,
b1 6
b1 =
b1 D
b1 K
b1 +
b11000000100010010101111010000001 (
b1 $
b10 *
1%
#160000
0%
#180000
b1101011000001001 8
b1000010010000100 ?
b1101011000001001 F
b1000010010000100 M
b10000100100001001101011000001001 !
b10000100100001001101011000001001 ,
b10 6
b10 =
b10 D
b10 K
b10 +
b10000100100001001101011000001001 (
b10 $
b11 *
1%
#200000
0%
#220000
b101011001100011 8
b1011000111110000 ?
b101011001100011 F
b1011000111110000 M
b10110001111100000101011001100011 !
b10110001111100000101011001100011 ,
b11 6
b11 =
b11 D
b11 K
b11 +
b10110001111100000101011001100011 (
b11 $
b100 *
1%
#240000
0%
#260000
b111101100001101 8
b11010111001 ?
b111101100001101 F
b11010111001 M
b110101110010111101100001101 !
b110101110010111101100001101 ,
b100 6
b100 =
b100 D
b100 K
b100 +
b110101110010111101100001101 (
b100 $
b101 *
1%
#280000
0%
#300000
b1001100110001101 8
b100011011011111 ?
b1001100110001101 F
b100011011011111 M
b1000110110111111001100110001101 !
b1000110110111111001100110001101 ,
b101 6
b101 =
b101 D
b101 K
b101 +
b1000110110111111001100110001101 (
b101 $
b110 *
1%
#320000
0%
#340000
b1000010001100101 8
b1011001011000010 ?
b1000010001100101 F
b1011001011000010 M
b10110010110000101000010001100101 !
b10110010110000101000010001100101 ,
b110 6
b110 =
b110 D
b110 K
b110 +
b10110010110000101000010001100101 (
b110 $
b111 *
1%
#360000
0%
#380000
b101001000010010 8
b1000100100110111 ?
b101001000010010 F
b1000100100110111 M
b10001001001101110101001000010010 !
b10001001001101110101001000010010 ,
b111 6
b111 =
b111 D
b111 K
b111 +
b10001001001101110101001000010010 (
b111 $
b1000 *
1%
#400000
0%
#420000
b1110001100000001 8
b11110011 ?
b1110001100000001 F
b11110011 M
b111100111110001100000001 !
b111100111110001100000001 ,
b1000 6
b1000 =
b1000 D
b1000 K
b1000 +
b111100111110001100000001 (
b1000 $
b1001 *
1%
#440000
0%
#460000
b1100110100001101 8
b11011010111 ?
b1100110100001101 F
b11011010111 M
b110110101111100110100001101 !
b110110101111100110100001101 ,
b1001 6
b1001 =
b1001 D
b1001 K
b1001 +
b110110101111100110100001101 (
b1001 $
b1010 *
1%
#480000
0%
#500000
b1111000101110110 8
b11101100100011 ?
b1111000101110110 F
b11101100100011 M
b111011001000111111000101110110 !
b111011001000111111000101110110 ,
b1010 6
b1010 =
b1010 D
b1010 K
b1010 +
b111011001000111111000101110110 (
b1010 $
b1011 *
1%
#520000
0%
#540000
b1100110100111101 8
b1111010001101 ?
b1100110100111101 F
b1111010001101 M
b11110100011011100110100111101 !
b11110100011011100110100111101 ,
b1011 6
b1011 =
b1011 D
b1011 K
b1011 +
b11110100011011100110100111101 (
b1011 $
b1100 *
1%
#560000
0%
#580000
b101011111101101 8
b111011011010100 ?
b101011111101101 F
b111011011010100 M
b1110110110101000101011111101101 !
b1110110110101000101011111101101 ,
b1100 6
b1100 =
b1100 D
b1100 K
b1100 +
b1110110110101000101011111101101 (
b1100 $
b1101 *
1%
#600000
0%
#620000
b1111011110001100 8
b100011000101101 ?
b1111011110001100 F
b100011000101101 M
b1000110001011011111011110001100 !
b1000110001011011111011110001100 ,
b1101 6
b1101 =
b1101 D
b1101 K
b1101 +
b1000110001011011111011110001100 (
b1101 $
b1110 *
1%
#640000
0%
#660000
b1110100111111001 8
b111110011111101 ?
b1110100111111001 F
b111110011111101 M
b1111100111111011110100111111001 !
b1111100111111011110100111111001 ,
b1110 6
b1110 =
b1110 D
b1110 K
b1110 +
b1111100111111011110100111111001 (
b1110 $
b1111 *
1%
#680000
0%
#700000
b10010011000110 8
b1110001100110111 ?
b10010011000110 F
b1110001100110111 M
b11100011001101110010010011000110 !
b11100011001101110010010011000110 ,
b1111 6
b1111 =
b1111 D
b1111 K
b1111 +
b11100011001101110010010011000110 (
b1111 $
b0 *
1%
#720000
0%
#740000
bx 8
bx ?
bx F
bx M
bx !
bx ,
b0 6
b0 =
b0 D
b0 K
b0 +
1'
0)
b0 $
b1 *
1%
#760000
b11010100100100 8
b1001000010101 ?
b11010100100100 F
b1001000010101 M
b10010000101010011010100100100 !
b10010000101010011010100100100 ,
b1001000010101 C
b11010100100100 <
0%
#780000
b1 6
b1 =
b1 D
b1 K
b1 +
b1 $
b10 *
1%
#800000
b101111010000001 8
b1100000010001001 ?
b101111010000001 F
b1100000010001001 M
b11000000100010010101111010000001 !
b11000000100010010101111010000001 ,
b101111010000001 <
b1100000010001001 C
0%
#820000
b10 6
b10 =
b10 D
b10 K
b10 +
b10 $
b11 *
1%
#840000
b1101011000001001 8
b1000010010000100 ?
b1101011000001001 F
b1000010010000100 M
b10000100100001001101011000001001 !
b10000100100001001101011000001001 ,
b1000010010000100 C
b1101011000001001 <
0%
#860000
b11 6
b11 =
b11 D
b11 K
b11 +
b11 $
b100 *
1%
#880000
b101011001100011 8
b1011000111110000 ?
b101011001100011 F
b1011000111110000 M
b10110001111100000101011001100011 !
b10110001111100000101011001100011 ,
b101011001100011 <
b1011000111110000 C
0%
#900000
b100 6
b100 =
b100 D
b100 K
b100 +
b100 $
b101 *
1%
#920000
b111101100001101 8
b11010111001 ?
b111101100001101 F
b11010111001 M
b110101110010111101100001101 !
b110101110010111101100001101 ,
b11010111001 C
b111101100001101 <
0%
#940000
b101 6
b101 =
b101 D
b101 K
b101 +
b101 $
b110 *
1%
#960000
b1001100110001101 8
b100011011011111 ?
b1001100110001101 F
b100011011011111 M
b1000110110111111001100110001101 !
b1000110110111111001100110001101 ,
b1001100110001101 <
b100011011011111 C
0%
#980000
b110 6
b110 =
b110 D
b110 K
b110 +
b110 $
b111 *
1%
#1000000
b1000010001100101 8
b1011001011000010 ?
b1000010001100101 F
b1011001011000010 M
b10110010110000101000010001100101 !
b10110010110000101000010001100101 ,
b1011001011000010 C
b1000010001100101 <
0%
#1020000
b111 6
b111 =
b111 D
b111 K
b111 +
b111 $
b1000 *
1%
#1040000
b101001000010010 8
b1000100100110111 ?
b101001000010010 F
b1000100100110111 M
b10001001001101110101001000010010 !
b10001001001101110101001000010010 ,
b101001000010010 <
b1000100100110111 C
0%
#1060000
b1000 6
b1000 =
b1000 D
b1000 K
b1000 +
b1000 $
b1001 *
1%
#1080000
b1110001100000001 8
b11110011 ?
b1110001100000001 F
b11110011 M
b111100111110001100000001 !
b111100111110001100000001 ,
b11110011 C
b1110001100000001 <
0%
#1100000
b1001 6
b1001 =
b1001 D
b1001 K
b1001 +
b1001 $
b1010 *
1%
#1120000
b1100110100001101 8
b11011010111 ?
b1100110100001101 F
b11011010111 M
b110110101111100110100001101 !
b110110101111100110100001101 ,
b1100110100001101 <
b11011010111 C
0%
#1140000
b1010 6
b1010 =
b1010 D
b1010 K
b1010 +
b1010 $
b1011 *
1%
#1160000
b1111000101110110 8
b11101100100011 ?
b1111000101110110 F
b11101100100011 M
b111011001000111111000101110110 !
b111011001000111111000101110110 ,
b11101100100011 C
b1111000101110110 <
0%
#1180000
b1011 6
b1011 =
b1011 D
b1011 K
b1011 +
b1011 $
b1100 *
1%
#1200000
b1100110100111101 8
b1111010001101 ?
b1100110100111101 F
b1111010001101 M
b11110100011011100110100111101 !
b11110100011011100110100111101 ,
b1100110100111101 <
b1111010001101 C
0%
#1220000
b1100 6
b1100 =
b1100 D
b1100 K
b1100 +
b1100 $
b1101 *
1%
#1240000
b101011111101101 8
b111011011010100 ?
b101011111101101 F
b111011011010100 M
b1110110110101000101011111101101 !
b1110110110101000101011111101101 ,
b111011011010100 C
b101011111101101 <
0%
#1260000
b1101 6
b1101 =
b1101 D
b1101 K
b1101 +
b1101 $
b1110 *
1%
#1280000
b1111011110001100 8
b100011000101101 ?
b1111011110001100 F
b100011000101101 M
b1000110001011011111011110001100 !
b1000110001011011111011110001100 ,
b1111011110001100 <
b100011000101101 C
0%
#1300000
b1110 6
b1110 =
b1110 D
b1110 K
b1110 +
b1110 $
b1111 *
1%
#1320000
b1110100111111001 8
b111110011111101 ?
b1110100111111001 F
b111110011111101 M
b1111100111111011110100111111001 !
b1111100111111011110100111111001 ,
b111110011111101 C
b1110100111111001 <
0%
#1340000
b1111 6
b1111 =
b1111 D
b1111 K
b1111 +
b1111 $
b10000 *
1%
#1360000
b10010011000110 8
b1110001100110111 ?
b10010011000110 F
b1110001100110111 M
b11100011001101110010010011000110 !
b11100011001101110010010011000110 ,
b10010011000110 <
b1110001100110111 C
0%
#1380000
1%
